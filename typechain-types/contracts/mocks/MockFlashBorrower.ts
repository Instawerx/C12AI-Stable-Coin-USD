/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../../common";

export interface MockFlashBorrowerInterface extends utils.Interface {
  functions: {
    "CALLBACK_SUCCESS()": FunctionFragment;
    "action()": FunctionFragment;
    "executeFlashLoan(address,address,uint256)": FunctionFragment;
    "onFlashLoan(address,address,uint256,uint256,bytes)": FunctionFragment;
    "setAction(uint8)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "CALLBACK_SUCCESS"
      | "action"
      | "executeFlashLoan"
      | "onFlashLoan"
      | "setAction"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "CALLBACK_SUCCESS",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "action", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "executeFlashLoan",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "onFlashLoan",
    values: [string, string, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setAction",
    values: [BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "CALLBACK_SUCCESS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "action", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "executeFlashLoan",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onFlashLoan",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setAction", data: BytesLike): Result;

  events: {
    "FlashLoanReceived(address,uint256,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "FlashLoanReceived"): EventFragment;
}

export interface FlashLoanReceivedEventObject {
  token: string;
  amount: BigNumber;
  fee: BigNumber;
}
export type FlashLoanReceivedEvent = TypedEvent<
  [string, BigNumber, BigNumber],
  FlashLoanReceivedEventObject
>;

export type FlashLoanReceivedEventFilter =
  TypedEventFilter<FlashLoanReceivedEvent>;

export interface MockFlashBorrower extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: MockFlashBorrowerInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    CALLBACK_SUCCESS(overrides?: CallOverrides): Promise<[string]>;

    action(overrides?: CallOverrides): Promise<[number]>;

    executeFlashLoan(
      lender: string,
      token: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    onFlashLoan(
      initiator: string,
      token: string,
      amount: BigNumberish,
      fee: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setAction(
      _action: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;
  };

  CALLBACK_SUCCESS(overrides?: CallOverrides): Promise<string>;

  action(overrides?: CallOverrides): Promise<number>;

  executeFlashLoan(
    lender: string,
    token: string,
    amount: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  onFlashLoan(
    initiator: string,
    token: string,
    amount: BigNumberish,
    fee: BigNumberish,
    data: BytesLike,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setAction(
    _action: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  callStatic: {
    CALLBACK_SUCCESS(overrides?: CallOverrides): Promise<string>;

    action(overrides?: CallOverrides): Promise<number>;

    executeFlashLoan(
      lender: string,
      token: string,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    onFlashLoan(
      initiator: string,
      token: string,
      amount: BigNumberish,
      fee: BigNumberish,
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    setAction(_action: BigNumberish, overrides?: CallOverrides): Promise<void>;
  };

  filters: {
    "FlashLoanReceived(address,uint256,uint256)"(
      token?: null,
      amount?: null,
      fee?: null
    ): FlashLoanReceivedEventFilter;
    FlashLoanReceived(
      token?: null,
      amount?: null,
      fee?: null
    ): FlashLoanReceivedEventFilter;
  };

  estimateGas: {
    CALLBACK_SUCCESS(overrides?: CallOverrides): Promise<BigNumber>;

    action(overrides?: CallOverrides): Promise<BigNumber>;

    executeFlashLoan(
      lender: string,
      token: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    onFlashLoan(
      initiator: string,
      token: string,
      amount: BigNumberish,
      fee: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setAction(
      _action: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    CALLBACK_SUCCESS(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    action(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    executeFlashLoan(
      lender: string,
      token: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    onFlashLoan(
      initiator: string,
      token: string,
      amount: BigNumberish,
      fee: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setAction(
      _action: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;
  };
}
