name: Deploy to GCP Cloud Run

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

env:
  GCP_PROJECT_ID: c12ai-dao
  GCP_REGION: us-central1
  SERVICE_NAME: c12usd-backend
  REGISTRY: us-central1-docker.pkg.dev
  REPOSITORY: c12usd-repo

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test

    - name: Run linter
      run: npm run lint

    - name: Run type checking
      run: npm run typecheck

    - name: Generate coverage
      run: npm run coverage

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Determine environment
      id: env
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          echo "environment=${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT
        elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          echo "environment=production" >> $GITHUB_OUTPUT
        else
          echo "environment=staging" >> $GITHUB_OUTPUT
        fi

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Deploy to Cloud Run
      run: |
        # Build and push will be handled by Cloud Build
        gcloud builds submit --config cloudbuild.yaml \
          --substitutions=_ENVIRONMENT=${{ steps.env.outputs.environment }}

    - name: Send notification on success
      if: success()
      run: |
        echo "✅ Deployment to ${{ steps.env.outputs.environment }} successful!"

    - name: Send notification on failure
      if: failure()
      run: |
        echo "❌ Deployment to ${{ steps.env.outputs.environment }} failed!"