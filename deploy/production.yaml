# Production Environment Configuration for C12USD
# Google Cloud Run deployment configuration

apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: c12usd-backend-prod
  namespace: default
  labels:
    app: c12usd-backend
    environment: production
  annotations:
    run.googleapis.com/ingress: all
    run.googleapis.com/execution-environment: gen2
spec:
  template:
    metadata:
      labels:
        app: c12usd-backend
        environment: production
        version: ${IMAGE_TAG}
      annotations:
        # Scaling configuration for production load
        autoscaling.knative.dev/minScale: "2"
        autoscaling.knative.dev/maxScale: "100"

        # Resource allocation - higher for production
        run.googleapis.com/memory: "2Gi"
        run.googleapis.com/cpu: "2"

        # Networking
        run.googleapis.com/vpc-access-connector: projects/${PROJECT_ID}/locations/us-central1/connectors/c12usd-connector
        run.googleapis.com/vpc-access-egress: private-ranges-only

        # Security
        run.googleapis.com/execution-environment: gen2
        run.googleapis.com/service-account: cloudbuild-sa@${PROJECT_ID}.iam.gserviceaccount.com

        # Monitoring and performance
        run.googleapis.com/cpu-throttling: "false"
        run.googleapis.com/startup-cpu-boost: "true"

        # Binary authorization for enhanced security
        run.googleapis.com/binary-authorization: default

    spec:
      containerConcurrency: 1000
      timeoutSeconds: 900  # 15 minutes for long-running operations
      serviceAccountName: cloudbuild-sa@${PROJECT_ID}.iam.gserviceaccount.com
      containers:
      - name: c12usd-backend
        image: us-central1-docker.pkg.dev/${PROJECT_ID}/c12usd-repo/c12usd-backend:${IMAGE_TAG}
        ports:
        - name: http1
          containerPort: 8080
          protocol: TCP

        # Environment variables
        env:
        - name: NODE_ENV
          value: "production"
        - name: ENVIRONMENT
          value: "production"
        - name: PORT
          value: "8080"
        - name: LOG_LEVEL
          value: "info"
        - name: REGION
          value: "us-central1"

        # Security settings
        - name: CORS_ORIGIN
          value: "https://app.c12usd.com,https://c12usd.com"
        - name: RATE_LIMIT_MAX
          value: "1000"
        - name: RATE_LIMIT_WINDOW_MS
          value: "900000" # 15 minutes

        # Secrets from Google Secret Manager
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              key: latest
              name: prod-database-url
        - name: BSC_RPC
          valueFrom:
            secretKeyRef:
              key: latest
              name: bsc-rpc-url
        - name: POLYGON_RPC
          valueFrom:
            secretKeyRef:
              key: latest
              name: polygon-rpc-url
        - name: OPS_SIGNER_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              key: latest
              name: ops-signer-key

        # Contract addresses
        - name: BSC_TOKEN_ADDRESS
          value: "0x6fa920C5c676ac15AF6360D9D755187a6C87bd58"
        - name: BSC_GATEWAY_ADDRESS
          value: "0x8303Ac615266d5b9940b74332503f25D092F5f13"
        - name: POLYGON_TOKEN_ADDRESS
          value: "0xD85F049E881D899Bd1a3600A58A08c2eA4f34811"
        - name: POLYGON_GATEWAY_ADDRESS
          value: "0xF3a23bbebC06435dF16370F879cD808c408f702D"

        # Transaction limits
        - name: MAX_TRANSACTION_LIMIT
          value: "1000000"

        # PoR settings
        - name: POR_UPDATE_INTERVAL_HOURS
          value: "24"

        # Payment processor secrets
        - name: STRIPE_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: latest
              name: stripe-secret-key
        - name: STRIPE_WEBHOOK_SECRET
          valueFrom:
            secretKeyRef:
              key: latest
              name: stripe-webhook-secret
        - name: CASHAPP_CLIENT_ID
          valueFrom:
            secretKeyRef:
              key: latest
              name: cashapp-client-id
        - name: CASHAPP_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: latest
              name: cashapp-client-secret
        - name: CASHAPP_WEBHOOK_SECRET
          valueFrom:
            secretKeyRef:
              key: latest
              name: cashapp-webhook-secret

        # Resource limits and requests - production grade
        resources:
          limits:
            cpu: "2"
            memory: "2Gi"
          requests:
            cpu: "1"
            memory: "1Gi"

        # Health checks - more aggressive for production
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1

        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
          successThreshold: 1

        startupProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 3
          timeoutSeconds: 3
          failureThreshold: 20
          successThreshold: 1

        # Security context
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: false

---

# Traffic allocation for production with canary deployment support
apiVersion: serving.knative.dev/v1
kind: Route
metadata:
  name: c12usd-backend-prod-route
  labels:
    app: c12usd-backend
    environment: production
spec:
  traffic:
  # Main production traffic
  - percent: 100
    latestRevision: true
    tag: live

  # Canary deployment slot (0% initially)
  - percent: 0
    revisionName: c12usd-backend-prod-canary
    tag: canary

---

# Horizontal Pod Autoscaler for production
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: c12usd-backend-prod-hpa
  labels:
    app: c12usd-backend
    environment: production
spec:
  scaleTargetRef:
    apiVersion: serving.knative.dev/v1
    kind: Service
    name: c12usd-backend-prod
  minReplicas: 2
  maxReplicas: 100
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 30